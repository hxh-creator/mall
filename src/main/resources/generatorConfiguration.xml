<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--
            targetRuntime: 执行生成的逆向工程的版本
                    MyBatis3Simple: 生成基本的CRUD（清新简洁版）
                    MyBatis3: 生成带条件的CRUD（奢华尊享版）
     -->
    <properties resource="generator.properties"/>
    <context id="DB2Tables" targetRuntime="MyBatis3" defaultModelType="flat">
        <!--自动检查关键字，为关键字增加反引号-->
        <property name="autoDelimitKeywords" value="true"/>
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <property name="javaFileEncoding" value="UTF-8"/>
        <!--覆盖生成XML文件-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <!--生成实体类添加toString()方法-->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
            <property name="suppressDate" value="true"/>
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>
        <!--配置数据库连接-->
        <jdbcConnection
                driverClass="${jdbc.driverClass}"
                connectionURL="${jdbc.connectionURL}"
                userId="${jdbc.userId}"
                password="${jdbc.password}">
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>
        <!--指定生成model/pojo的路径-->
        <!-- javaBean的生成策略-->
        <javaModelGenerator targetPackage="com.example.mall.mbg.model" targetProject="./src/main/java"/>
        <!--指定生成mapper.xml的路径-->
        <!-- SQL映射文件的生成策略 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="./src/main/resources"/>
        <!--指定生成mapper接口的的路径-->
        <!-- Mapper接口的生成策略 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.example.mall.mbg.mapper" targetProject="./src/main/java"/>
        <!--生成全部表tableName设为%-->
        <!-- 逆向分析的表 -->
        <!-- tableName设置为*号，可以对应所有表，此时不写domainObjectName -->
        <!-- domainObjectName属性指定生成出来的实体类的类名 -->
        <table tableName="%"/>
    </context>
</generatorConfiguration>